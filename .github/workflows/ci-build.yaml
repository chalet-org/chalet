name: Chalet Release

on:
  push:
    tags:
      - "v*"
  release:
    types: [created]

jobs:
  Release:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: "Create Release"
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Chalet ${{ github.ref }}
          draft: false
          prerelease: true
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
  Linux-Ubuntu:
    needs: Release
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      CC: gcc-10
      CXX: g++-10
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: "Get GCC 10"
        run: |
          sudo apt update
          sudo apt install gcc-10 g++-10 zip
      - name: "Build: Debug"
        run: bash ./build.sh Debug
      - name: "Build: Release"
        run: build/Debug/chalet-debug --save-schema bundle
      - name: "Run: Tests"
        run: build/x86_64-linux-gnu_Release/chalet run Release tests_chalet
      - name: "Zip binary"
        run: zip -j dist/chalet-linux.zip dist/chalet LICENSE.txt
      - name: "Upload binary"
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.Release.outputs.upload_url }}
          asset_path: ./dist/chalet-linux.zip
          asset_name: chalet-linux.zip
          asset_content_type: application/zip
  MacOS:
    needs: Release
    runs-on: macos-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: "Build: Debug"
        run: bash ./build.sh Debug
      - name: "Build: Release"
        run: build/Debug/chalet-debug --save-schema bundle
      - name: "Run: Tests"
        run: build/x64_x64_Release/chalet run Release tests_chalet
      - name: "Zip binary"
        run: zip -j dist/chalet-macos.zip dist/Chalet.app/Contents/MacOS/chalet LICENSE.txt
      - name: "Upload binary"
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.Release.outputs.upload_url }}
          asset_path: ./dist/chalet-macos.zip
          asset_name: chalet-macos.zip
          asset_content_type: application/zip
  Windows-MSVC:
    needs: Release
    runs-on: windows-latest
    defaults:
      run:
        shell: cmd
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: "Build: Debug"
        run: "build.bat"
      - name: "Build: Release"
        run: "build/Debug/chalet-debug.exe" --save-schema bundle
      - name: "Run: Tests"
        run: "build/x86_64-pc-win32_Release/chalet.exe" run Release tests_chalet
      - name: "Zip binary"
        run: powershell Compress-Archive dist/chalet.exe LICENSE.txt dist/chalet-win32-msvc.zip
      - name: "Upload binary"
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.Release.outputs.upload_url }}
          asset_path: ./dist/chalet-win32-msvc.zip
          asset_name: chalet-win32-msvc.zip
          asset_content_type: application/zip
  Windows-MSYS2:
    needs: Release
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: "Get MSYS2"
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            base-devel
            git
            zip
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-cmake
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: "Build: Debug"
        run: bash ./build.sh Debug
      - name: "Build: Release"
        run: build/Debug/chalet-debug --save-schema bundle
      - name: "Run: Tests"
        run: build/x86_64-w64-mingw32_Release/chalet run Release tests_chalet
      - name: "Zip binary"
        run: zip -j dist/chalet-win32-mingw64.zip dist/chalet.exe LICENSE.txt
      - name: "Upload binary"
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.Release.outputs.upload_url }}
          asset_path: ./dist/chalet-win32-mingw64.zip
          asset_name: chalet-win32-mingw64.zip
          asset_content_type: application/zip
