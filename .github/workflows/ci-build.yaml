name: Node.js Package

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  release:
    types: [created]

jobs:
  release:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - name: 'Create Release'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-${{ github.sha }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: true
  linux:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      CC: gcc-10
      CXX: g++-10
    steps:
    - name: 'Checkout'
      uses: actions/checkout@v2
    - name: 'Get GCC 10'
      run: |
        sudo apt update
        sudo apt install gcc-10 g++-10 zip
    - name: 'Build: Debug'
      run: bash ./build.sh Debug
    - name: 'Build: Release'
      run: build/Debug/chalet-debug build Release
    - name: 'Run: Tests'
      run: build/Release/chalet run Release tests_chalet
    - name: 'Zip binary'
      run: |
        mkdir -p dist
        zip -j dist/chalet-linux.zip build/Release/chalet LICENSE.txt
    - name: 'Upload binary'
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ jobs.release.steps.create_release.outputs.upload_url }}
        asset_path: ./dist/chalet-linux.zip
        asset_name: chalet-linux.zip
        asset_content_type: application/zip
  macos:
    runs-on: macos-latest
    defaults:
      run:
        shell: bash
    steps:
    - name: 'Checkout'
      uses: actions/checkout@v2
    - name: 'Build: Debug'
      run: bash ./build.sh Debug
    - name: 'Build: Release'
      run: build/Debug/chalet-debug build Release
    - name: 'Run: Tests'
      run: build/Release/chalet run Release tests_chalet
    - name: 'Zip binary'
      run: |
        mkdir -p dist
        zip -j dist/chalet-macos.zip build/Release/chalet LICENSE.txt
    - name: 'Upload binary'
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ jobs.release.steps.create_release.outputs.upload_url }}
        asset_path: ./dist/chalet-macos.zip
        asset_name: chalet-macos.zip
        asset_content_type: application/zip
  windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - name: 'Get MSYS2'
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          base-devel
          git
          zip
          mingw-w64-x86_64-toolchain
          mingw-w64-x86_64-cmake
    - name: 'Checkout'
      uses: actions/checkout@v2
    - name: 'Build: Debug'
      run: bash ./build.sh Debug
    - name: 'Build: Release'
      run: build/Debug/chalet-debug build Release
    - name: 'Run: Tests'
      run: build/Release/chalet run Release tests_chalet
    - name: 'Zip binary'
      run: |
        mkdir -p dist
        zip -j dist/chalet-win32.zip build/Release/chalet.exe LICENSE.txt
    - name: 'Upload binary'
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ jobs.release.steps.create_release.outputs.upload_url }}
        asset_path: ./dist/chalet-win32.zip
        asset_name: chalet-win32.zip
        asset_content_type: application/zip
