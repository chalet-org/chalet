{
	"$schema": "http://json-schema.org/draft-07/schema",
	"type": "object",
	"additionalProperties": false,
	"required": [
		"settings",
		"tools",
		"toolchains"
	],
	"properties": {
		"tools": {
			"type": "object",
			"additionalProperties": false,
			"description": "A list of additional tools for the platform.",
			"properties": {
				"bash": {
					"type": "string",
					"description": "The executable path to GNU Bourne-Again SHell.",
					"default": "/usr/bin/bash"
				},
				"brew": {
					"type": "string",
					"description": "The executable path to the Homebrew package manager. (MacOS)",
					"default": "/usr/local/bin/brew"
				},
				"command_prompt": {
					"type": "string",
					"description": "The executable path to Command Prompt. (Windows)",
					"default": "C:/Windows/System32/cmd.exe"
				},
				"codesign": {
					"type": "string",
					"description": "The executable path to Apple's codesign command-line utility. (MacOS)",
					"default": "/usr/bin/codesign"
				},
				"git": {
					"type": "string",
					"description": "The executable path to Git.",
					"default": "/usr/bin/git"
				},
				"hdiutil": {
					"type": "string",
					"description": "The executable path to Apple's hdiutil command-line utility. (MacOS)",
					"default": "/usr/bin/hdiutil"
				},
				"install_name_tool": {
					"type": "string",
					"description": "The executable path to Apple's install_name_tool command-line utility. (MacOS)",
					"default": "/usr/bin/install_name_tool"
				},
				"instruments": {
					"type": "string",
					"description": "The executable path to Apple's instruments command-line utility. (MacOS)",
					"default": "/usr/bin/instruments"
				},
				"ldd": {
					"type": "string",
					"description": "The executable path to ldd.",
					"default": "/usr/bin/ldd"
				},
				"lua": {
					"type": "string",
					"description": "The executable path to Lua.",
					"default": "/usr/local/bin/lua"
				},
				"makensis": {
					"type": "string",
					"description": "The executable path to the Nullsoft Scriptable Install System (NSIS) compiler. (Windows)",
					"default": "C:/Program Files (x86)/NSIS/makensis.exe"
				},
				"osascript": {
					"type": "string",
					"description": "The executable path to Apple's osascript command-line utility. (MacOS)",
					"default": "/usr/bin/osascript"
				},
				"otool": {
					"type": "string",
					"description": "The executable path to Apple's otool command-line utility. (MacOS)",
					"default": "/usr/bin/otool"
				},
				"perl": {
					"type": "string",
					"description": "The executable path to Perl.",
					"default": "/usr/local/bin/perl"
				},
				"plutil": {
					"type": "string",
					"description": "The executable path to Apple's plutil command-line utility. (MacOS)",
					"default": "/usr/bin/plutil"
				},
				"powershell": {
					"type": "string",
					"description": "The executable path to Powershell. (Windows)",
					"default": "C:/Windows/System32/WindowsPowerShell/v1.0/powershell.exe"
				},
				"python": {
					"type": "string",
					"description": "The executable path to Python 2.",
					"default": "/usr/bin/python"
				},
				"python3": {
					"type": "string",
					"description": "The executable path to Python 3.",
					"default": "/usr/local/bin/python3"
				},
				"ruby": {
					"type": "string",
					"description": "The executable path to Ruby.",
					"default": "/usr/bin/ruby"
				},
				"sample": {
					"type": "string",
					"description": "The executable path to Apple's sample command-line utility. (MacOS)",
					"default": "/usr/bin/sample"
				},
				"sips": {
					"type": "string",
					"description": "The executable path to Apple's sips command-line utility. (MacOS)",
					"default": "/usr/bin/sips"
				},
				"tiffutil": {
					"type": "string",
					"description": "The executable path to Apple's tiffutil command-line utility. (MacOS)",
					"default": "/usr/bin/tiffutil"
				},
				"xcodebuild": {
					"type": "string",
					"description": "The executable path to Apple's xcodebuild command-line utility. (MacOS)",
					"default": "/usr/bin/xcodebuild"
				},
				"xcrun": {
					"type": "string",
					"description": "The executable path to Apple's xcrun command-line utility. (MacOS)",
					"default": "/usr/bin/xcrun"
				}
			}
		},
		"appleSdks": {
			"type": "object",
			"description": "A list of Apple platform SDK paths. (MacOS)"
		},
		"settings": {
			"type": "object",
			"additionalProperties": false,
			"description": "A list of settings related to the build.",
			"required": [
				"dumpAssembly",
				"maxJobs",
				"showCommands",
				"benchmark",
				"configuration",
				"toolchain",
				"architecture",
				"signingIdentity",
				"inputFile",
				"envFile",
				"rootDir",
				"outputDir",
				"distributionDir"
			],
			"properties": {
				"dumpAssembly": {
					"type": "boolean",
					"description": "true to use include an asm dump of each file in the build, false otherwise.",
					"default": false
				},
				"generateCompileCommands": {
					"type": "boolean",
					"description": "true to generate a compile_commands.json file for Clang tooling use, false otherwise.",
					"default": false
				},
				"maxJobs": {
					"type": "integer",
					"description": "The number of jobs to run during compilation.",
					"minimum": 1
				},
				"showCommands": {
					"description": "true to show the commands run during the build, false to just show the source file.",
					"type": "boolean",
					"default": false
				},
				"benchmark": {
					"description": "true to show all build times (total build time, build targets, other steps), false to hide them.",
					"type": "boolean",
					"default": true
				},
				"configuration": {
					"description": "The build configuration to use for building, if not the previous one.",
					"type": "string"
				},
				"toolchain": {
					"description": "The toolchain id to use for building, if not the previous one.",
					"type": "string"
				},
				"architecture": {
					"description": "The architecture id to use for building, if not the previous one.",
					"type": "string"
				},
				"signingIdentity": {
					"description": "The signing identity to use when bundling the macos application distribution.",
					"type": "string"
				},
				"inputFile": {
					"description": "An input build file to use.",
					"type": "string",
					"default": "chalet.json"
				},
				"envFile": {
					"description": "A file to load environment variables from.",
					"type": "string",
					"default": ".env"
				},
				"rootDir": {
					"description": "The root directory to run the build from.",
					"type": "string"
				},
				"outputDir": {
					"description": "The output directory of the build.",
					"type": "string",
					"default": "build"
				},
				"externalDir": {
					"type": "string",
					"description": "The directory to install external dependencies into prior to the rest of the build's run.",
					"default": "chalet_external"
				},
				"distributionDir": {
					"description": "The root directory of all distribution bundles.",
					"type": "string"
				}
			}
		},
		"toolchains": {
			"type": "object",
			"additionalProperties": false,
			"description": "A list of toolchains.",
			"patternProperties": {
				"^[\\w\\-\\+\\.]{3,}$": {
					"type": "object",
					"additionalProperties": false,
					"description": "A list of compilers and tools needing for the build itself.",
					"required": [
						"archiver",
						"cmake",
						"compilerCpp",
						"compilerC",
						"compilerWindowsResource",
						"linker",
						"profiler",
						"make",
						"disassembler",
						"ninja",
						"strategy",
						"version"
					],
					"properties": {
						"version": {
							"type": "string",
							"description": "A version string to identify the toolchain. If MSVC, this must be the full version string of the Visual Studio Installation. (vswhere's installationVersion string)"
						},
						"strategy": {
							"type": "string",
							"description": "The strategy to use during the build.",
							"enum": [
								"makefile",
								"native-experimental",
								"ninja"
							],
							"default": "makefile"
						},
						"buildPathStyle": {
							"type": "string",
							"description": "The build path style. Examples:\nconfiguration: build/Debug\narch-configuration: build/x64_Debug\ntarget-triple: build/x64-linux-gnu_Debug\ntoolchain-name: build/my-cool-toolchain_name_Debug",
							"enum": [
								"configuration",
								"arch-configuration",
								"target-triple",
								"toolchain-name"
							],
							"default": "target-triple"
						},
						"archiver": {
							"type": "string",
							"description": "The executable path to the toolchain's static library archive utility - typically ar with GCC, libtool on MacOS, or lib.exe with Visual Studio.",
							"default": "/usr/bin/ar"
						},
						"compilerCpp": {
							"type": "string",
							"description": "The executable path to the toolchain's C++ compiler.",
							"default": "/usr/bin/c++"
						},
						"compilerC": {
							"type": "string",
							"description": "The executable path to the toolchain's C compiler.",
							"default": "/usr/bin/cc"
						},
						"compilerWindowsResource": {
							"type": "string",
							"description": "The executable path to the resource compiler. (Windows)"
						},
						"cmake": {
							"type": "string",
							"description": "The executable path to CMake.",
							"default": "/usr/local/bin/cmake"
						},
						"linker": {
							"type": "string",
							"description": "The executable path to the toolchain's linker - typically ld with GCC, lld with LLVM, or link.exe with Visual Studio.",
							"default": "/usr/bin/ld"
						},
						"profiler": {
							"type": "string",
							"description": "The executable path to the toochain's command-line profiler (if applicable) - for instance, gprof with GCC.",
							"default": "/usr/bin/gprof"
						},
						"make": {
							"type": "string",
							"description": "The executable path to GNU make, or NMAKE/Qt Jom with Visual Studio.",
							"default": "/usr/bin/make"
						},
						"ninja": {
							"type": "string",
							"description": "The executable path to Ninja."
						},
						"disassembler": {
							"type": "string",
							"description": "The executable path to the toolchain's disassembler (if applicable) - for instance, objdump with GCC, dumpbin with MSVC, and otool with Apple LLVM."
						}
					}
				}
			}
		},
		"theme": {
			"type": "object",
			"additionalProperties": false,
			"description": "The color theme to give to Chalet",
			"properties": {
				"info": {
					"type": "string",
					"description": "An ANSI color to apply.",
					"enum": [
						"reset",
						"black",
						"red",
						"green",
						"yellow",
						"blue",
						"magenta",
						"cyan",
						"white"
					]
				},
				"error": {
					"type": "string",
					"description": "An ANSI color to apply.",
					"enum": [
						"reset",
						"black",
						"red",
						"green",
						"yellow",
						"blue",
						"magenta",
						"cyan",
						"white"
					]
				},
				"warning": {
					"type": "string",
					"description": "An ANSI color to apply.",
					"enum": [
						"reset",
						"black",
						"red",
						"green",
						"yellow",
						"blue",
						"magenta",
						"cyan",
						"white"
					]
				},
				"success": {
					"type": "string",
					"description": "An ANSI color to apply.",
					"enum": [
						"reset",
						"black",
						"red",
						"green",
						"yellow",
						"blue",
						"magenta",
						"cyan",
						"white"
					]
				},
				"flair": {
					"type": "string",
					"description": "An ANSI color to apply.",
					"enum": [
						"reset",
						"black",
						"red",
						"green",
						"yellow",
						"blue",
						"magenta",
						"cyan",
						"white"
					]
				},
				"header": {
					"type": "string",
					"description": "An ANSI color to apply.",
					"enum": [
						"reset",
						"black",
						"red",
						"green",
						"yellow",
						"blue",
						"magenta",
						"cyan",
						"white"
					]
				},
				"build": {
					"type": "string",
					"description": "An ANSI color to apply.",
					"enum": [
						"reset",
						"black",
						"red",
						"green",
						"yellow",
						"blue",
						"magenta",
						"cyan",
						"white"
					]
				},
				"alt": {
					"type": "string",
					"description": "An ANSI color to apply.",
					"enum": [
						"reset",
						"black",
						"red",
						"green",
						"yellow",
						"blue",
						"magenta",
						"cyan",
						"white"
					]
				},
				"note": {
					"type": "string",
					"description": "An ANSI color to apply.",
					"enum": [
						"reset",
						"black",
						"red",
						"green",
						"yellow",
						"blue",
						"magenta",
						"cyan",
						"white"
					]
				}
			}
		}
	}
}
